$date
2022-10-31T15:59+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module ALU $end
 $var wire 32 ! io_in_A $end
 $var wire 33 " _T $end
 $var wire 10 # io_part_of_bit $end
 $var wire 32 $ io_ALU_Output $end
 $var wire 32 % outputMux_0 $end
 $var wire 1 & io_ALU_Equal $end
 $var wire 32 ' _GEN_1 $end
 $var wire 1 ( clock $end
 $var wire 32 ) io_in_B $end
 $var wire 2 * io_function_Select $end
 $var wire 32 + outputMux_2 $end
 $var wire 1 , reset $end
 $var wire 32 - outputMux_1 $end
$upscope $end
$enddefinitions $end
$dumpvars
b000000000000000000000000000000000 "
b00000000000000000000000000000000 )
0&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 +
b00000000000000000000000000000000 $
b00000000000000000000000000000000 !
b00000000000000000000000000000000 -
b0000000000 #
0,
b00000000000000000000000000000000 %
b00 *
0(
$end
#0
1&
b0101010101 #
1,
#1
1(
#6
0(
#11
1(
#16
0(
#21
1(
#26
0(
#31
1(
#36
0(
#41
1(
#46
b00000000000000000000000000000101 !
b00000000000000000000000000000100 -
b00000000000000000000000000000110 %
b000000000000000000000000000000110 "
0&
b00000000000000000000000000000110 '
b00000000000000000000000000000110 $
b00000000000000000000000000000101 +
0(
0,
b00000000000000000000000000000001 )
#51
1(
#56
b00000000000000000000000000110010 !
b00000000000000000000000000110001 -
b00000000000000000000000000110011 %
b000000000000000000000000000110011 "
b00000000000000000000000000110011 '
b00000000000000000000000000110011 $
b00000000000000000000000000110010 +
0(
