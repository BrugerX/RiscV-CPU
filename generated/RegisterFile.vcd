$date
2022-10-31T20:59+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module RegisterFile $end
 $var wire 32 ! _GEN_37 $end
 $var wire 32 " _GEN_22 $end
 $var wire 32 # _GEN_43 $end
 $var wire 32 $ io_out_B $end
 $var wire 32 % _GEN_2 $end
 $var wire 32 & _GEN_10 $end
 $var wire 4 ' io_sel_B $end
 $var wire 32 ( _GEN_25 $end
 $var wire 32 ) _GEN_19 $end
 $var wire 32 * _GEN_5 $end
 $var wire 32 + registers_8 $end
 $var wire 32 , _GEN_13 $end
 $var wire 32 - _GEN_8 $end
 $var wire 32 . registers_15 $end
 $var wire 32 / _GEN_42 $end
 $var wire 32 0 registers_5 $end
 $var wire 32 1 _GEN_39 $end
 $var wire 32 2 _GEN_30 $end
 $var wire 32 3 _GEN_24 $end
 $var wire 32 4 _GEN_45 $end
 $var wire 4 5 io_sel_A $end
 $var wire 32 6 _GEN_27 $end
 $var wire 32 7 _GEN_33 $end
 $var wire 32 8 registers_12 $end
 $var wire 32 9 _GEN_12 $end
 $var wire 32 : _GEN_7 $end
 $var wire 32 ; io_out_A $end
 $var wire 32 < _GEN_36 $end
 $var wire 32 = _GEN_21 $end
 $var wire 32 > registers_4 $end
 $var wire 32 ? _GEN_18 $end
 $var wire 32 @ _GEN_1 $end
 $var wire 32 A registers_7 $end
 $var wire 4 B io_writeSelect $end
 $var wire 32 C _GEN_4 $end
 $var wire 32 D _GEN_41 $end
 $var wire 32 E _GEN_35 $end
 $var wire 1 F clock $end
 $var wire 32 G registers_14 $end
 $var wire 1 H io_writeEnable $end
 $var wire 32 I io_writeData $end
 $var wire 32 J _GEN_23 $end
 $var wire 32 K _GEN_44 $end
 $var wire 32 L _GEN_38 $end
 $var wire 32 M _GEN_17 $end
 $var wire 32 N _GEN_26 $end
 $var wire 32 O _GEN_47 $end
 $var wire 32 P registers_11 $end
 $var wire 32 Q _GEN_11 $end
 $var wire 32 R _GEN_20 $end
 $var wire 32 S _GEN_29 $end
 $var wire 32 T _GEN_14 $end
 $var wire 32 U _GEN_6 $end
 $var wire 32 V registers_3 $end
 $var wire 32 W _GEN_9 $end
 $var wire 32 X registers_10 $end
 $var wire 1 Y reset $end
 $var wire 32 Z _GEN_3 $end
 $var wire 32 [ _GEN_46 $end
 $var wire 32 \ registers_6 $end
 $var wire 32 ] _GEN_34 $end
 $var wire 32 ^ registers_9 $end
 $var wire 32 _ _GEN_28 $end
 $var wire 32 ` _GEN_40 $end
 $var wire 32 a registers_13 $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 D
b0000 '
b00000000000000000000000000000000 <
b00000000000000000000000000000000 [
b00000000000000000000000000000000 S
b00000000000000000000000000000000 >
b00000000000000000000000000000000 !
b00000000000000000000000000000000 U
b00000000000000000000000000000000 8
b00000000000000000000000000000000 #
b00000000000000000000000000000000 O
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 I
b00000000000000000000000000000000 4
b00000000000000000000000000000000 `
b00000000000000000000000000000000 K
b00000000000000000000000000000000 6
b00000000000000000000000000000000 .
b00000000000000000000000000000000 M
b00000000000000000000000000000000 E
b00000000000000000000000000000000 0
b00000000000000000000000000000000 \
b00000000000000000000000000000000 G
0F
b00000000000000000000000000000000 *
b00000000000000000000000000000000 ^
0H
b00000000000000000000000000000000 A
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 X
b00000000000000000000000000000000 C
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 &
b00000000000000000000000000000000 Z
0Y
b00000000000000000000000000000000 =
b00000000000000000000000000000000 (
b00000000000000000000000000000000 T
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 7
b00000000000000000000000000000000 "
b00000000000000000000000000000000 V
b00000000000000000000000000000000 N
b00000000000000000000000000000000 9
b00000000000000000000000000000000 P
b00000000000000000000000000000000 3
b00000000000000000000000000000000 R
b0000 5
b00000000000000000000000000000000 J
b00000000000000000000000000000000 a
b00000000000000000000000000000000 L
b00000000000000000000000000000000 /
b00000000000000000000000000000000 1
b00000000000000000000000000000000 )
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 @
b00000000000000000000000000000000 +
b00000000000000000000000000000000 _
b0000 B
b00000000000000000000000000000000 W
b00000000000000000000000000000000 -
b00000000000000000000000000000000 %
$end
#0
1Y
#1
1F
#6
0F
#11
1F
#16
0F
#21
1F
#26
0F
#31
1F
#36
0F
#41
1F
#46
b00000000000000000000000000010100 3
b00000000000000000000000000010100 <
b00000000000000000000000000010100 4
b00000000000000000000000000010100 R
b00000000000000000000000000010100 J
b00000000000000000000000000010100 S
b00000000000000000000000000010100 K
b00000000000000000000000000010100 6
b00000000000000000000000000010100 L
b00000000000000000000000000010100 /
b00000000000000000000000000010100 N
0F
b00000000000000000000000000010100 1
b00000000000000000000000000010100 2
b00000000000000000000000000010100 ]
1H
b00000000000000000000000000010100 _
b0010 B
b00000000000000000000000000010100 `
0Y
b00000000000000000000000000010100 D
b0010 '
b00000000000000000000000000010100 E
b00000000000000000000000000010100 =
b00000000000000000000000000010100 (
b00000000000000000000000000010100 [
b00000000000000000000000000010100 )
b00000000000000000000000000010100 !
b00000000000000000000000000010100 ?
b00000000000000000000000000010100 "
b00000000000000000000000000010100 #
b00000000000000000000000000010100 $
b00000000000000000000000000010100 O
#51
1F
#56
0F
#61
1F
#66
0F
